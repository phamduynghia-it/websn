{"version":3,"file":"matrix.mjs","sources":["../src/matrix.js"],"sourcesContent":["/**\n * Matrix effect on a Canvas https://jcubic.github.io/cmatrix/\n *\n * Copyright (c) 2021-2023 Jakub T. Jankiewicz <https://jcubic.pl/me>\n * Released under MIT license\n *\n * The code was started at this Codepen https://codepen.io/jcubic/pen/rNeNwgB\n * And was based on code by Michael Goodman https://codepen.io/goodmanmr1/pen/jpPeRR\n *\n */\nvar katagana = gen_unicode(0x30a1, 0x30f6);\nvar hiragana = gen_unicode(0x3041, 0x3096);\n\n// ---------------------------------------------------------------\nclass Matrix {\n    constructor(\n        canvas,\n        {\n            chars = null,\n            font_size = 18,\n            width,\n            height,\n            font = \"monospace\",\n            color,\n            background,\n        } = {}\n    ) {\n        this._canvas = canvas;\n        if (this._canvas._matrix) {\n            this._canvas._matrix.stop();\n            this._canvas._matrix.clear();\n        }\n        this._canvas._matrix = this;\n        this._ctx = canvas.getContext(\"2d\");\n        this._font_size = font_size;\n        this._drops = [];\n        this._color = color;\n        this._background = background;\n        this._font = font;\n        this._chars = chars ? chars : katagana.concat(hiragana);\n        this.resize(width, height);\n        Matrix.messages = [\n            \"3\",\n            \"2\",\n            \"1\",\n            \"Happy birthday\",\n            \"25.06.2003\",\n            \"Nguyễn Bảo Hân\",\n            \"Chúc em sinh nhật vui vẻ\",\n            \"Có tất cả trừ vất vả\"\n        ];\n        Matrix.currentMessageIndex = 0;\n        Matrix.nextMessageIndex = 1;\n        Matrix.ledParticles = [];\n        Matrix.morphing = false;\n        Matrix.morphProgress = 0;\n        Matrix.lastSwitchTime = 0;\n        Matrix.showHeart = false;\n        Matrix.fallingImages = [\n          \" a1.jfif\",\n            \"a2.jfif\"\n        ];\n        Matrix.loadedImages = [];\n        Matrix.fallingState = null;\n    }\n    random_char() {\n        return rnd(this._chars);\n    }\n    render_char(char, x, y) {\n        this._ctx.fillText(char, x, y);\n    }\n    start() {\n        if (this._run) {\n            return;\n        }\n        let frames = 0;\n        this._run = true;\n        const self = this;\n        (function loop() {\n            if (self._run) {\n                if (frames++ % 2 === 0) {\n                    self.render(); // slower render\n                }\n                requestAnimationFrame(loop);\n            }\n        })();\n    }\n    stop() {\n        this._run = false;\n    }\n    reset() {\n        for (let x = 0; x < this._columns; x++) {\n            this._drops[x] = 255;\n        }\n    }\n    resize(width, height) {\n        this._width = width;\n        this._height = height;\n        this.clear();\n        this._canvas.width = width;\n        setTimeout(() => {\n            this._canvas.height = height;\n            this.reset();\n        }, 0);\n        this._columns = Math.round(width / this._font_size);\n    }\n    clear() {\n        this._ctx.fillStyle = this._background;\n        this._ctx.fillRect(0, 0, this._width, this._height);\n        this._ctx.fillStyle = this._color;\n        this._ctx.font = this._font_size + \"px \" + this._font;\n    }\n    fullscreen() {\n        if (!document.fullscreenElement) {\n            document.documentElement.requestFullscreen();\n        } else if (document.exitFullscreen) {\n            document.exitFullscreen();\n        }\n    }\n    getLedPoints(text, font, width, height, density = 8) {\n        const off = document.createElement(\"canvas\");\n        off.width = width;\n        off.height = height;\n        const ctx = off.getContext(\"2d\");\n        ctx.clearRect(0, 0, width, height);\n        ctx.font = font;\n        ctx.textAlign = \"center\";\n        ctx.textBaseline = \"middle\";\n        ctx.fillStyle = \"#fff\";\n        ctx.fillText(text, width / 2, height / 2);\n        const img = ctx.getImageData(0, 0, width, height).data;\n        const points = [];\n        for (let y = 0; y < height; y += density) {\n            for (let x = 0; x < width; x += density) {\n                const idx = (y * width + x) * 4 + 3;\n                if (img[idx] > 128) points.push({ x, y });\n            }\n        }\n        return points;\n    }\n    render() {\n        this.clear();\n        // Đặt màu ký tự rơi là gradient tím-hồng\n        let gradient = this._ctx.createLinearGradient(0, 0, this._width, 0);\n        gradient.addColorStop(0, \"#d291ff\");\n        gradient.addColorStop(1, \"#ff8ae2\");\n        this._ctx.fillStyle = gradient;\n        for (let col = 0; col < this._drops.length; col++) {\n            const char = this.random_char();\n            const x = col * this._font_size;\n            const y = this._drops[col] * this._font_size;\n            this.render_char(char, x, y);\n            if (y > this._height && Math.random() > 0.975) {\n                this._drops[col] = 0;\n            }\n            this._drops[col]++;\n        }\n\n        // Nếu đã hết các câu chữ, chỉ hiển thị hiệu ứng trái tim\n        if (Matrix.showHeart) {\n            this.renderHeart();\n            return;\n        }\n\n        // Hiệu ứng LED grid morphing chữ ở giữa màn hình (bling mờ ảo)\n        const width = this._width;\n        const height = this._height;\n        const fontSize = Math.floor(Math.min(width, height) / 7);\n        const font = `bold ${fontSize}px Arial, Roboto, 'sans-serif'`;\n        const density = Math.max(3, Math.floor(Math.min(width, height) / 70));\n        const now = performance.now();\n        const time = now / 500; // tốc độ bling\n\n        if (!Matrix.morphing) {\n            const points = this.getLedPoints(\n                Matrix.messages[Matrix.currentMessageIndex],\n                font,\n                width,\n                height,\n                density\n            );\n            // Thêm phase ngẫu nhiên cho hiệu ứng bling\n            Matrix.ledParticles = points.map((pt) => ({\n                x: pt.x,\n                y: pt.y,\n                tx: pt.x,\n                ty: pt.y,\n                alpha: 1,\n                phase: Math.random() * Math.PI * 2,\n            }));\n            for (let p of Matrix.ledParticles) {\n                this._ctx.save();\n                this._ctx.beginPath();\n                this._ctx.arc(p.x, p.y, density / 2.5, 0, 2 * Math.PI);\n                this._ctx.fillStyle = \"#fff\";\n                // Hiệu ứng bling: alpha dao động nhẹ\n                const blingAlpha = 0.7 + 0.3 * Math.sin(time + p.phase);\n                this._ctx.globalAlpha = p.alpha * blingAlpha;\n                this._ctx.shadowColor = \"#fff\";\n                this._ctx.shadowBlur = 4; // mờ ảo nhẹ\n                this._ctx.fill();\n                this._ctx.restore();\n            }\n            if (\n                Matrix.currentMessageIndex === Matrix.messages.length - 1 &&\n                now - Matrix.lastSwitchTime > 2000\n            ) {\n                // Đã hết câu cuối cùng, chuyển sang hiệu ứng trái tim\n                Matrix.showHeart = true;\n                return;\n            }\n            if (now - Matrix.lastSwitchTime > 2000) {\n                const fromPoints = points;\n                const toPoints = this.getLedPoints(\n                    Matrix.messages[Matrix.nextMessageIndex],\n                    font,\n                    width,\n                    height,\n                    density\n                );\n                const maxLen = Math.max(fromPoints.length, toPoints.length);\n                Matrix.ledParticles = [];\n                for (let i = 0; i < maxLen; i++) {\n                    const from = fromPoints[i % fromPoints.length];\n                    const to = toPoints[i % toPoints.length];\n                    Matrix.ledParticles.push({\n                        x: from.x,\n                        y: from.y,\n                        tx: to.x,\n                        ty: to.y,\n                        alpha: 1,\n                        phase: Math.random() * Math.PI * 2,\n                    });\n                }\n                Matrix.morphing = true;\n                Matrix.morphProgress = 0;\n            }\n        } else {\n            Matrix.morphProgress += 0.04;\n            let done = true;\n            for (let p of Matrix.ledParticles) {\n                const t = Math.min(1, Matrix.morphProgress);\n                const nx = p.x + (p.tx - p.x) * t;\n                const ny = p.y + (p.ty - p.y) * t;\n                this._ctx.save();\n                this._ctx.beginPath();\n                this._ctx.arc(nx, ny, density / 2.5, 0, 2 * Math.PI);\n                this._ctx.fillStyle = \"#fff\";\n                // Hiệu ứng bling: alpha dao động nhẹ\n                const blingAlpha = 0.7 + 0.3 * Math.sin(time + p.phase);\n                this._ctx.globalAlpha = (p.alpha * (1 - t) + t) * blingAlpha;\n                this._ctx.shadowColor = \"#fff\";\n                this._ctx.shadowBlur = 4;\n                this._ctx.fill();\n                this._ctx.restore();\n                if (t < 1) done = false;\n            }\n            if (done) {\n                if (Matrix.currentMessageIndex === Matrix.messages.length - 1) {\n                    Matrix.showHeart = true;\n                    return;\n                }\n                Matrix.currentMessageIndex = Matrix.nextMessageIndex;\n                Matrix.nextMessageIndex =\n                    (Matrix.nextMessageIndex + 1) % Matrix.messages.length;\n                Matrix.morphing = false;\n                Matrix.lastSwitchTime = now;\n            }\n        }\n    }\n    renderHeart() {\n        const ctx = this._ctx;\n        const width = this._width;\n        const height = this._height;\n        // Cài đặt hiệu ứng\n        const settings = {\n            particles: {\n                length: 2000,\n                duration: 2,\n                velocity: 100,\n                effect: -1.3,\n                size: 13,\n            },\n        };\n        // Pool particle\n        if (!this._heartParticles) {\n            this._heartParticles = [];\n            this._heartParticlePool = [];\n            for (let i = 0; i < settings.particles.length; i++) {\n                this._heartParticlePool.push({\n                    position: { x: 0, y: 0 },\n                    velocity: { x: 0, y: 0 },\n                    acceleration: { x: 0, y: 0 },\n                    age: 0,\n                });\n            }\n            this._heartFirstActive = 0;\n            this._heartFirstFree = 0;\n            this._heartTime = null;\n            this._heartImage = (() => {\n                const canvas = document.createElement(\"canvas\");\n                const cctx = canvas.getContext(\"2d\");\n                canvas.width = settings.particles.size;\n                canvas.height = settings.particles.size;\n                function pointOnHeart(t) {\n                    return {\n                        x: 160 * Math.pow(Math.sin(t), 3),\n                        y:\n                            130 * Math.cos(t) -\n                            50 * Math.cos(2 * t) -\n                            20 * Math.cos(3 * t) -\n                            10 * Math.cos(4 * t) +\n                            25,\n                    };\n                }\n                function to(t) {\n                    const point = pointOnHeart(t);\n                    point.x =\n                        settings.particles.size / 2 +\n                        (point.x * settings.particles.size) / 350;\n                    point.y =\n                        settings.particles.size / 2 -\n                        (point.y * settings.particles.size) / 350;\n                    return point;\n                }\n                cctx.beginPath();\n                let t = -Math.PI;\n                let point = to(t);\n                cctx.moveTo(point.x, point.y);\n                while (t < Math.PI) {\n                    t += 0.01;\n                    point = to(t);\n                    cctx.lineTo(point.x, point.y);\n                }\n                cctx.closePath();\n                cctx.fillStyle = \"#FF5CA4\";\n                cctx.fill();\n                const image = new window.Image();\n                image.src = canvas.toDataURL();\n                return image;\n            })();\n        }\n        // Animation\n        const now = performance.now() / 1000;\n        const deltaTime = now - (this._heartTime || now);\n        this._heartTime = now;\n        // clear canvas (đã clear ở đầu render)\n        // Tạo particle mới\n        const particleRate =\n            settings.particles.length / settings.particles.duration;\n        const amount = particleRate * deltaTime;\n        function pointOnHeart(t) {\n            return {\n                x: 160 * Math.pow(Math.sin(t), 3),\n                y:\n                    130 * Math.cos(t) -\n                    50 * Math.cos(2 * t) -\n                    20 * Math.cos(3 * t) -\n                    10 * Math.cos(4 * t) +\n                    25,\n            };\n        }\n        for (let i = 0; i < amount; i++) {\n            const pos = pointOnHeart(Math.PI - 2 * Math.PI * Math.random());\n            const len = Math.sqrt(pos.x * pos.x + pos.y * pos.y);\n            const dir = {\n                x: (pos.x / len) * settings.particles.velocity,\n                y: (pos.y / len) * settings.particles.velocity,\n            };\n            // Lấy particle từ pool\n            const p = this._heartParticlePool[this._heartFirstFree];\n            p.position.x = width / 2 + pos.x;\n            p.position.y = height / 2 - pos.y;\n            p.velocity.x = dir.x;\n            p.velocity.y = -dir.y;\n            p.acceleration.x = dir.x * settings.particles.effect;\n            p.acceleration.y = -dir.y * settings.particles.effect;\n            p.age = 0;\n            this._heartFirstFree++;\n            if (this._heartFirstFree === settings.particles.length)\n                this._heartFirstFree = 0;\n            if (this._heartFirstActive === this._heartFirstFree) {\n                this._heartFirstActive++;\n                if (this._heartFirstActive === settings.particles.length)\n                    this._heartFirstActive = 0;\n            }\n        }\n        // Update và vẽ particle\n        let i;\n        // Update\n        if (this._heartFirstActive < this._heartFirstFree) {\n            for (i = this._heartFirstActive; i < this._heartFirstFree; i++) {\n                const p = this._heartParticlePool[i];\n                p.position.x += p.velocity.x * deltaTime;\n                p.position.y += p.velocity.y * deltaTime;\n                p.velocity.x += p.acceleration.x * deltaTime;\n                p.velocity.y += p.acceleration.y * deltaTime;\n                p.age += deltaTime;\n            }\n        }\n        if (this._heartFirstFree < this._heartFirstActive) {\n            for (\n                i = this._heartFirstActive;\n                i < settings.particles.length;\n                i++\n            ) {\n                const p = this._heartParticlePool[i];\n                p.position.x += p.velocity.x * deltaTime;\n                p.position.y += p.velocity.y * deltaTime;\n                p.velocity.x += p.acceleration.x * deltaTime;\n                p.velocity.y += p.acceleration.y * deltaTime;\n                p.age += deltaTime;\n            }\n            for (i = 0; i < this._heartFirstFree; i++) {\n                const p = this._heartParticlePool[i];\n                p.position.x += p.velocity.x * deltaTime;\n                p.position.y += p.velocity.y * deltaTime;\n                p.velocity.x += p.acceleration.x * deltaTime;\n                p.velocity.y += p.acceleration.y * deltaTime;\n                p.age += deltaTime;\n            }\n        }\n        // Remove inactive\n        while (\n            this._heartParticlePool[this._heartFirstActive].age >=\n                settings.particles.duration &&\n            this._heartFirstActive !== this._heartFirstFree\n        ) {\n            this._heartFirstActive++;\n            if (this._heartFirstActive === settings.particles.length)\n                this._heartFirstActive = 0;\n        }\n        // Draw\n        if (this._heartFirstActive < this._heartFirstFree) {\n            for (i = this._heartFirstActive; i < this._heartFirstFree; i++) {\n                const p = this._heartParticlePool[i];\n                // ease\n                const ease = (t) => --t * t * t + 1;\n                const size =\n                    settings.particles.size *\n                    ease(p.age / settings.particles.duration);\n                ctx.globalAlpha = 1 - p.age / settings.particles.duration;\n                ctx.drawImage(\n                    this._heartImage,\n                    p.position.x - size / 2,\n                    p.position.y - size / 2,\n                    size,\n                    size\n                );\n            }\n        }\n        if (this._heartFirstFree < this._heartFirstActive) {\n            for (\n                i = this._heartFirstActive;\n                i < settings.particles.length;\n                i++\n            ) {\n                const p = this._heartParticlePool[i];\n                const ease = (t) => --t * t * t + 1;\n                const size =\n                    settings.particles.size *\n                    ease(p.age / settings.particles.duration);\n                ctx.globalAlpha = 1 - p.age / settings.particles.duration;\n                ctx.drawImage(\n                    this._heartImage,\n                    p.position.x - size / 2,\n                    p.position.y - size / 2,\n                    size,\n                    size\n                );\n            }\n            for (i = 0; i < this._heartFirstFree; i++) {\n                const p = this._heartParticlePool[i];\n                const ease = (t) => --t * t * t + 1;\n                const size =\n                    settings.particles.size *\n                    ease(p.age / settings.particles.duration);\n                ctx.globalAlpha = 1 - p.age / settings.particles.duration;\n                ctx.drawImage(\n                    this._heartImage,\n                    p.position.x - size / 2,\n                    p.position.y - size / 2,\n                    size,\n                    size\n                );\n            }\n        }\n        ctx.globalAlpha = 1;\n        // Thêm chữ I LOVE YOU ở giữa trái tim\n        ctx.save();\n        ctx.font = `bold ${Math.floor(\n            height / 12\n        )}px Arial, Roboto, 'sans-serif'`;\n        ctx.textAlign = \"center\";\n        ctx.textBaseline = \"middle\";\n        ctx.fillStyle = \"#fff\";\n        ctx.shadowColor = \"#ff5ca4\";\n        ctx.shadowBlur = 12;\n        ctx.fillText(\"Bảo Hân\", width / 2, height / 2);\n        ctx.restore();\n        // --- ẢNH RƠI LIÊN TỤC 2 BÊN ---\n        if (!Matrix.fallingState) {\n            Matrix.loadedImages = [];\n            let loaded = 0;\n            for (let src of Matrix.fallingImages) {\n                const img = new window.Image();\n                img.src = src;\n                img.onload = () => {\n                    loaded++;\n                };\n                Matrix.loadedImages.push(img);\n            }\n            Matrix.fallingState = Matrix.loadedImages.map((img, i) => ({\n                y: -Math.random() * height,\n                speed: height / 2 + (Math.random() * height) / 2,\n                x: i === 0 ? width * 0.125 : width * 0.875,\n                img,\n            }));\n        }\n        // Vẽ ảnh rơi liên tục\n        for (let i = 0; i < Matrix.fallingState.length; i++) {\n            const state = Matrix.fallingState[i];\n            const img = Matrix.loadedImages[i];\n            if (!img.complete) continue;\n            const imgW = width / 4;\n            const imgH = img.height * (imgW / img.width);\n            // deltaTime cho hiệu ứng mượt\n            const now = performance.now() / 1000;\n            if (!state._lastTime) state._lastTime = now;\n            const deltaTime = now - state._lastTime;\n            state._lastTime = now;\n            state.y += state.speed * deltaTime;\n            if (state.y > height) state.y = -imgH;\n            ctx.save();\n            ctx.globalAlpha = 1;\n            ctx.drawImage(img, state.x - imgW / 2, state.y, imgW, imgH);\n            ctx.restore();\n        }\n    }\n}\n\n// ---------------------------------------------------------------\n// :: Init code\n// ---------------------------------------------------------------\nfunction matrix(\n    canvas,\n    {\n        chars = null,\n        font_size = 14,\n        exit = true,\n        font = \"monospace\",\n        width = null,\n        height = null,\n        resize = true,\n        color = \"#0F0\",\n        mount = () => {},\n        unmount = () => {},\n        background = \"rgba(0, 0,0,0.05)\",\n    } = {}\n) {\n    const matrix = new Matrix(canvas, {\n        font_size: font_size,\n        chars,\n        font,\n        color,\n        background,\n        width: width ?? default_width(),\n        height: height ?? default_height(),\n    });\n\n    let resize_handler;\n\n    if (resize) {\n        resize_handler = () => matrix.resize(default_width(), default_height());\n\n        window.addEventListener(\"resize\", resize_handler);\n\n        if (screen?.orientation) {\n            screen.orientation.addEventListener(\"change\", resize_handler);\n        }\n    }\n\n    canvas.classList.add(\"running\");\n\n    matrix.start();\n    mount(matrix);\n\n    if (exit) {\n        return new Promise(function (resolve) {\n            window.addEventListener(\"keydown\", function (e) {\n                var key = e.key.toLowerCase();\n                if (key === \"q\" || key === \"escape\") {\n                    matrix.stop();\n                    canvas.classList.remove(\"running\");\n                    if (resize_handler) {\n                        window.removeEventListener(\"resize\", resize_handler);\n                        if (screen?.orientation) {\n                            screen.orientation.removeEventListener(\n                                \"change\",\n                                resize_handler\n                            );\n                        }\n                    }\n                    setTimeout(() => {\n                        unmount(matrix);\n                        resolve();\n                    }, 0);\n                }\n            });\n        });\n    }\n}\n\nexport default matrix;\n\n// ---------------------------------------------------------------\n// :: Utils\n// ---------------------------------------------------------------\nfunction gen_unicode(start, end) {\n    var chars = [];\n    for (var i = start; i <= end; ++i) {\n        chars.push(String.fromCharCode(i));\n    }\n    return chars;\n}\n\nmatrix.range = gen_unicode;\n\nmatrix.custom_chars = make_custom_chars();\n\n// ---------------------------------------------------------------\nfunction rnd(array) {\n    return array[Math.floor(Math.random() * array.length)];\n}\n\n// ---------------------------------------------------------------\nfunction default_width() {\n    return window.innerWidth;\n}\n\n// ---------------------------------------------------------------\nfunction default_height() {\n    return window.innerHeight;\n}\n\n// ---------------------------------------------------------------\nfunction make_chars(...nums) {\n    return nums.map((num) => String.fromCharCode(num));\n}\n\n// ---------------------------------------------------------------\nfunction make_custom_chars() {\n    const nums = [\n        0x25aa, 0x254c, 0x00a9, 0x00a6, 0x007c, 0x007a, 0x003e, 0x003c, 0x003a,\n        0x0022, 0x002a, 0x002b, 0x30a2, 0x30a6, 0x30a8, 0x30aa, 0x30ab, 0x30ad,\n        0x30b1, 0x30b3, 0x30b5, 0x30b7, 0x30b9, 0x30bb, 0x30bd, 0x30bf, 0x30c4,\n        0x30c6, 0x30ca, 0x30cb, 0x30cc, 0x30cd, 0x30cf, 0x30d2, 0x30db, 0x30de,\n        0x30df, 0x30e0, 0x30e1, 0x30e2, 0x30e4, 0x30e8, 0x30e9, 0x30ea, 0x30ef,\n        0x30fc, 0xa78a, 0xe937,\n    ];\n\n    // '6' don't have its glyph\n    const digits = matrix\n        .range(0x0030, 0x0035)\n        .concat(matrix.range(0x0037, 0x0039));\n\n    return digits.concat(make_chars(...nums));\n}\n"],"names":["katagana","gen_unicode","hiragana","Matrix","constructor","canvas","chars","font_size","width","height","font","color","background","this","_canvas","_matrix","stop","clear","_ctx","getContext","_font_size","_drops","_color","_background","_font","_chars","concat","resize","messages","currentMessageIndex","nextMessageIndex","ledParticles","morphing","morphProgress","lastSwitchTime","showHeart","fallingImages","loadedImages","fallingState","random_char","array","Math","floor","random","length","render_char","char","x","y","fillText","start","_run","frames","self","loop","render","requestAnimationFrame","reset","_columns","_width","_height","setTimeout","round","fillStyle","fillRect","fullscreen","document","fullscreenElement","exitFullscreen","documentElement","requestFullscreen","getLedPoints","text","density","off","createElement","ctx","clearRect","textAlign","textBaseline","img","getImageData","data","points","push","gradient","createLinearGradient","addColorStop","col","renderHeart","min","max","now","performance","time","done","p","t","nx","tx","ny","ty","save","beginPath","arc","PI","blingAlpha","sin","phase","globalAlpha","alpha","shadowColor","shadowBlur","fill","restore","map","pt","fromPoints","toPoints","maxLen","i","from","to","settings","duration","velocity","effect","size","_heartParticles","_heartParticlePool","position","acceleration","age","_heartFirstActive","_heartFirstFree","_heartTime","_heartImage","cctx","point","pow","cos","pointOnHeart","moveTo","lineTo","closePath","image","window","Image","src","toDataURL","deltaTime","amount","pos","len","sqrt","dir","ease","drawImage","onload","speed","state","complete","imgW","imgH","_lastTime","matrix","exit","mount","unmount","default_width","default_height","resize_handler","addEventListener","screen","orientation","classList","add","Promise","resolve","e","key","toLowerCase","remove","removeEventListener","end","String","fromCharCode","innerWidth","innerHeight","range","custom_chars","nums","num","make_chars"],"mappings":";;;;;;;;;;;AAUA,IAAIA,EAAWC,EAAY,MAAQ,OAC/BC,EAAWD,EAAY,MAAQ,OAGnC,MAAME,EACFC,YACIC,GACAC,MACIA,EAAQ,KAAIC,UACZA,EAAY,GAAEC,MACdA,EAAKC,OACLA,EAAMC,KACNA,EAAO,YAAWC,MAClBA,EAAKC,WACLA,GACA,IAEJC,KAAKC,QAAUT,EACXQ,KAAKC,QAAQC,UACbF,KAAKC,QAAQC,QAAQC,OACrBH,KAAKC,QAAQC,QAAQE,SAEzBJ,KAAKC,QAAQC,QAAUF,KACvBA,KAAKK,KAAOb,EAAOc,WAAW,MAC9BN,KAAKO,WAAab,EAClBM,KAAKQ,OAAS,GACdR,KAAKS,OAASX,EACdE,KAAKU,YAAcX,EACnBC,KAAKW,MAAQd,EACbG,KAAKY,OAASnB,GAAgBN,EAAS0B,OAAOxB,GAC9CW,KAAKc,OAAOnB,EAAOC,GACnBN,EAAOyB,SAAW,CACd,IACA,IACA,IACA,iBACA,aACA,iBACA,2BACA,wBAEJzB,EAAO0B,oBAAsB,EAC7B1B,EAAO2B,iBAAmB,EAC1B3B,EAAO4B,aAAe,GACtB5B,EAAO6B,UAAW,EAClB7B,EAAO8B,cAAgB,EACvB9B,EAAO+B,eAAiB,EACxB/B,EAAOgC,WAAY,EACnBhC,EAAOiC,cAAgB,CACrB,WACE,WAEJjC,EAAOkC,aAAe,GACtBlC,EAAOmC,aAAe,KAE1BC,cACI,OAqjBKC,EArjBM3B,KAAKY,QAsjBPgB,KAAKC,MAAMD,KAAKE,SAAWH,EAAMI,SADlD,IAAaJ,EAnjBTK,YAAYC,EAAMC,EAAGC,GACjBnC,KAAKK,KAAK+B,SAASH,EAAMC,EAAGC,GAEhCE,QACI,GAAIrC,KAAKsC,KACL,OAEJ,IAAIC,EAAS,EACbvC,KAAKsC,MAAO,EACZ,MAAME,EAAOxC,MACb,SAAUyC,IACFD,EAAKF,OACDC,IAAW,GAAM,GACjBC,EAAKE,SAETC,sBAAsBF,GAE7B,CAPD,GASJtC,OACIH,KAAKsC,MAAO,EAEhBM,QACI,IAAK,IAAIV,EAAI,EAAGA,EAAIlC,KAAK6C,SAAUX,IAC/BlC,KAAKQ,OAAO0B,GAAK,IAGzBpB,OAAOnB,EAAOC,GACVI,KAAK8C,OAASnD,EACdK,KAAK+C,QAAUnD,EACfI,KAAKI,QACLJ,KAAKC,QAAQN,MAAQA,EACrBqD,YAAW,KACPhD,KAAKC,QAAQL,OAASA,EACtBI,KAAK4C,OAAO,GACb,GACH5C,KAAK6C,SAAWjB,KAAKqB,MAAMtD,EAAQK,KAAKO,YAE5CH,QACIJ,KAAKK,KAAK6C,UAAYlD,KAAKU,YAC3BV,KAAKK,KAAK8C,SAAS,EAAG,EAAGnD,KAAK8C,OAAQ9C,KAAK+C,SAC3C/C,KAAKK,KAAK6C,UAAYlD,KAAKS,OAC3BT,KAAKK,KAAKR,KAAOG,KAAKO,WAAa,MAAQP,KAAKW,MAEpDyC,aACSC,SAASC,kBAEHD,SAASE,gBAChBF,SAASE,iBAFTF,SAASG,gBAAgBC,oBAKjCC,aAAaC,EAAM9D,EAAMF,EAAOC,EAAQgE,EAAU,GAC9C,MAAMC,EAAMR,SAASS,cAAc,UACnCD,EAAIlE,MAAQA,EACZkE,EAAIjE,OAASA,EACb,MAAMmE,EAAMF,EAAIvD,WAAW,MAC3ByD,EAAIC,UAAU,EAAG,EAAGrE,EAAOC,GAC3BmE,EAAIlE,KAAOA,EACXkE,EAAIE,UAAY,SAChBF,EAAIG,aAAe,SACnBH,EAAIb,UAAY,OAChBa,EAAI3B,SAASuB,EAAMhE,EAAQ,EAAGC,EAAS,GACvC,MAAMuE,EAAMJ,EAAIK,aAAa,EAAG,EAAGzE,EAAOC,GAAQyE,KAC5CC,EAAS,GACf,IAAK,IAAInC,EAAI,EAAGA,EAAIvC,EAAQuC,GAAKyB,EAC7B,IAAK,IAAI1B,EAAI,EAAGA,EAAIvC,EAAOuC,GAAK0B,EAAS,CAEjCO,EAD0B,GAAjBhC,EAAIxC,EAAQuC,GAAS,GACnB,KAAKoC,EAAOC,KAAK,CAAErC,IAAGC,MAG7C,OAAOmC,EAEX5B,SACI1C,KAAKI,QAEL,IAAIoE,EAAWxE,KAAKK,KAAKoE,qBAAqB,EAAG,EAAGzE,KAAK8C,OAAQ,GACjE0B,EAASE,aAAa,EAAG,WACzBF,EAASE,aAAa,EAAG,WACzB1E,KAAKK,KAAK6C,UAAYsB,EACtB,IAAK,IAAIG,EAAM,EAAGA,EAAM3E,KAAKQ,OAAOuB,OAAQ4C,IAAO,CAC/C,MAAM1C,EAAOjC,KAAK0B,cACZQ,EAAIyC,EAAM3E,KAAKO,WACf4B,EAAInC,KAAKQ,OAAOmE,GAAO3E,KAAKO,WAClCP,KAAKgC,YAAYC,EAAMC,EAAGC,GACtBA,EAAInC,KAAK+C,SAAWnB,KAAKE,SAAW,OACpC9B,KAAKQ,OAAOmE,GAAO,GAEvB3E,KAAKQ,OAAOmE,KAIhB,GAAIrF,EAAOgC,UAEP,YADAtB,KAAK4E,cAKT,MAAMjF,EAAQK,KAAK8C,OACblD,EAASI,KAAK+C,QAEdlD,EAAO,QADI+B,KAAKC,MAAMD,KAAKiD,IAAIlF,EAAOC,GAAU,mCAEhDgE,EAAUhC,KAAKkD,IAAI,EAAGlD,KAAKC,MAAMD,KAAKiD,IAAIlF,EAAOC,GAAU,KAC3DmF,EAAMC,YAAYD,MAClBE,EAAOF,EAAM,IAEnB,GAAKzF,EAAO6B,SAgEL,CACH7B,EAAO8B,eAAiB,IACxB,IAAI8D,GAAO,EACX,IAAK,IAAIC,KAAK7F,EAAO4B,aAAc,CAC/B,MAAMkE,EAAIxD,KAAKiD,IAAI,EAAGvF,EAAO8B,eACvBiE,EAAKF,EAAEjD,GAAKiD,EAAEG,GAAKH,EAAEjD,GAAKkD,EAC1BG,EAAKJ,EAAEhD,GAAKgD,EAAEK,GAAKL,EAAEhD,GAAKiD,EAChCpF,KAAKK,KAAKoF,OACVzF,KAAKK,KAAKqF,YACV1F,KAAKK,KAAKsF,IAAIN,EAAIE,EAAI3B,EAAU,IAAK,EAAG,EAAIhC,KAAKgE,IACjD5F,KAAKK,KAAK6C,UAAY,OAEtB,MAAM2C,EAAa,GAAM,GAAMjE,KAAKkE,IAAIb,EAAOE,EAAEY,OACjD/F,KAAKK,KAAK2F,aAAeb,EAAEc,OAAS,EAAIb,GAAKA,GAAKS,EAClD7F,KAAKK,KAAK6F,YAAc,OACxBlG,KAAKK,KAAK8F,WAAa,EACvBnG,KAAKK,KAAK+F,OACVpG,KAAKK,KAAKgG,UACNjB,EAAI,IAAGF,GAAO,GAEtB,GAAIA,EAAM,CACN,GAAI5F,EAAO0B,sBAAwB1B,EAAOyB,SAASgB,OAAS,EAExD,YADAzC,EAAOgC,WAAY,GAGvBhC,EAAO0B,oBAAsB1B,EAAO2B,iBACpC3B,EAAO2B,kBACF3B,EAAO2B,iBAAmB,GAAK3B,EAAOyB,SAASgB,OACpDzC,EAAO6B,UAAW,EAClB7B,EAAO+B,eAAiB0D,OA7FV,CAClB,MAAMT,EAAStE,KAAK0D,aAChBpE,EAAOyB,SAASzB,EAAO0B,qBACvBnB,EACAF,EACAC,EACAgE,GAGJtE,EAAO4B,aAAeoD,EAAOgC,KAAKC,KAC9BrE,EAAGqE,EAAGrE,EACNC,EAAGoE,EAAGpE,EACNmD,GAAIiB,EAAGrE,EACPsD,GAAIe,EAAGpE,EACP8D,MAAO,EACPF,MAAOnE,KAAKE,SAAWF,KAAKgE,GAAK,MAErC,IAAK,IAAIT,KAAK7F,EAAO4B,aAAc,CAC/BlB,KAAKK,KAAKoF,OACVzF,KAAKK,KAAKqF,YACV1F,KAAKK,KAAKsF,IAAIR,EAAEjD,EAAGiD,EAAEhD,EAAGyB,EAAU,IAAK,EAAG,EAAIhC,KAAKgE,IACnD5F,KAAKK,KAAK6C,UAAY,OAEtB,MAAM2C,EAAa,GAAM,GAAMjE,KAAKkE,IAAIb,EAAOE,EAAEY,OACjD/F,KAAKK,KAAK2F,YAAcb,EAAEc,MAAQJ,EAClC7F,KAAKK,KAAK6F,YAAc,OACxBlG,KAAKK,KAAK8F,WAAa,EACvBnG,KAAKK,KAAK+F,OACVpG,KAAKK,KAAKgG,UAEd,GACI/G,EAAO0B,sBAAwB1B,EAAOyB,SAASgB,OAAS,GACxDgD,EAAMzF,EAAO+B,eAAiB,IAI9B,YADA/B,EAAOgC,WAAY,GAGvB,GAAIyD,EAAMzF,EAAO+B,eAAiB,IAAM,CACpC,MAAMmF,EAAalC,EACbmC,EAAWzG,KAAK0D,aAClBpE,EAAOyB,SAASzB,EAAO2B,kBACvBpB,EACAF,EACAC,EACAgE,GAEE8C,EAAS9E,KAAKkD,IAAI0B,EAAWzE,OAAQ0E,EAAS1E,QACpDzC,EAAO4B,aAAe,GACtB,IAAK,IAAIyF,EAAI,EAAGA,EAAID,EAAQC,IAAK,CAC7B,MAAMC,EAAOJ,EAAWG,EAAIH,EAAWzE,QACjC8E,EAAKJ,EAASE,EAAIF,EAAS1E,QACjCzC,EAAO4B,aAAaqD,KAAK,CACrBrC,EAAG0E,EAAK1E,EACRC,EAAGyE,EAAKzE,EACRmD,GAAIuB,EAAG3E,EACPsD,GAAIqB,EAAG1E,EACP8D,MAAO,EACPF,MAAOnE,KAAKE,SAAWF,KAAKgE,GAAK,IAGzCtG,EAAO6B,UAAW,EAClB7B,EAAO8B,cAAgB,IAmCnCwD,cACI,MAAMb,EAAM/D,KAAKK,KACXV,EAAQK,KAAK8C,OACblD,EAASI,KAAK+C,QAEd+D,EACS,CACP/E,OAAQ,IACRgF,SAAU,EACVC,SAAU,IACVC,QAAS,IACTC,KAAM,IAId,IAAKlH,KAAKmH,gBAAiB,CACvBnH,KAAKmH,gBAAkB,GACvBnH,KAAKoH,mBAAqB,GAC1B,IAAK,IAAIT,EAAI,EAAGA,EAAIG,EAAmB/E,OAAQ4E,IAC3C3G,KAAKoH,mBAAmB7C,KAAK,CACzB8C,SAAU,CAAEnF,EAAG,EAAGC,EAAG,GACrB6E,SAAU,CAAE9E,EAAG,EAAGC,EAAG,GACrBmF,aAAc,CAAEpF,EAAG,EAAGC,EAAG,GACzBoF,IAAK,IAGbvH,KAAKwH,kBAAoB,EACzBxH,KAAKyH,gBAAkB,EACvBzH,KAAK0H,WAAa,KAClB1H,KAAK2H,YAAc,MACf,MAAMnI,EAAS6D,SAASS,cAAc,UAChC8D,EAAOpI,EAAOc,WAAW,MAc/B,SAASuG,EAAGzB,GACR,MAAMyC,EAZV,SAAsBzC,GAClB,MAAO,CACHlD,EAAG,IAAMN,KAAKkG,IAAIlG,KAAKkE,IAAIV,GAAI,GAC/BjD,EACI,IAAMP,KAAKmG,IAAI3C,GACf,GAAKxD,KAAKmG,IAAI,EAAI3C,GAClB,GAAKxD,KAAKmG,IAAI,EAAI3C,GAClB,GAAKxD,KAAKmG,IAAI,EAAI3C,GAClB,IAIM4C,CAAa5C,GAO3B,OANAyC,EAAM3F,EACF4E,EAAmBI,KAAO,EACzBW,EAAM3F,EAAI4E,EAAmBI,KAAQ,IAC1CW,EAAM1F,EACF2E,EAAmBI,KAAO,EACzBW,EAAM1F,EAAI2E,EAAmBI,KAAQ,IACnCW,EArBXrI,EAAOG,MAAQmH,EAAmBI,KAClC1H,EAAOI,OAASkH,EAAmBI,KAsBnCU,EAAKlC,YACL,IAAIN,GAAKxD,KAAKgE,GACViC,EAAQhB,EAAGzB,GAEf,IADAwC,EAAKK,OAAOJ,EAAM3F,EAAG2F,EAAM1F,GACpBiD,EAAIxD,KAAKgE,IACZR,GAAK,IACLyC,EAAQhB,EAAGzB,GACXwC,EAAKM,OAAOL,EAAM3F,EAAG2F,EAAM1F,GAE/ByF,EAAKO,YACLP,EAAK1E,UAAY,UACjB0E,EAAKxB,OACL,MAAMgC,EAAQ,IAAIC,OAAOC,MAEzB,OADAF,EAAMG,IAAM/I,EAAOgJ,YACZJ,CACV,EAzCkB,GA4CvB,MAAMrD,EAAMC,YAAYD,MAAQ,IAC1B0D,EAAY1D,GAAO/E,KAAK0H,YAAc3C,GAC5C/E,KAAK0H,WAAa3C,EAGlB,MAEM2D,EADF5B,EAAmB/E,OAAS+E,EAAmBC,SACrB0B,EAY9B,IAAK,IAAI9B,EAAI,EAAGA,EAAI+B,EAAQ/B,IAAK,CAC7B,MAAMgC,GAZYvD,EAYOxD,KAAKgE,GAAK,EAAIhE,KAAKgE,GAAKhE,KAAKE,SAX/C,CACHI,EAAG,IAAMN,KAAKkG,IAAIlG,KAAKkE,IAAIV,GAAI,GAC/BjD,EACI,IAAMP,KAAKmG,IAAI3C,GACf,GAAKxD,KAAKmG,IAAI,EAAI3C,GAClB,GAAKxD,KAAKmG,IAAI,EAAI3C,GAClB,GAAKxD,KAAKmG,IAAI,EAAI3C,GAClB,KAKFwD,EAAMhH,KAAKiH,KAAKF,EAAIzG,EAAIyG,EAAIzG,EAAIyG,EAAIxG,EAAIwG,EAAIxG,GAC5C2G,EAAM,CACR5G,EAAIyG,EAAIzG,EAAI0G,EAAO9B,EAAmBE,SACtC7E,EAAIwG,EAAIxG,EAAIyG,EAAO9B,EAAmBE,UAGpC7B,EAAInF,KAAKoH,mBAAmBpH,KAAKyH,iBACvCtC,EAAEkC,SAASnF,EAAIvC,EAAQ,EAAIgJ,EAAIzG,EAC/BiD,EAAEkC,SAASlF,EAAIvC,EAAS,EAAI+I,EAAIxG,EAChCgD,EAAE6B,SAAS9E,EAAI4G,EAAI5G,EACnBiD,EAAE6B,SAAS7E,GAAK2G,EAAI3G,EACpBgD,EAAEmC,aAAapF,EAAI4G,EAAI5G,EAAI4E,EAAmBG,OAC9C9B,EAAEmC,aAAanF,GAAK2G,EAAI3G,EAAI2E,EAAmBG,OAC/C9B,EAAEoC,IAAM,EACRvH,KAAKyH,kBACDzH,KAAKyH,kBAAoBX,EAAmB/E,SAC5C/B,KAAKyH,gBAAkB,GACvBzH,KAAKwH,oBAAsBxH,KAAKyH,kBAChCzH,KAAKwH,oBACDxH,KAAKwH,oBAAsBV,EAAmB/E,SAC9C/B,KAAKwH,kBAAoB,IAjCrC,IAAsBpC,EAqCtB,IAAIuB,EAEJ,GAAI3G,KAAKwH,kBAAoBxH,KAAKyH,gBAC9B,IAAKd,EAAI3G,KAAKwH,kBAAmBb,EAAI3G,KAAKyH,gBAAiBd,IAAK,CAC5D,MAAMxB,EAAInF,KAAKoH,mBAAmBT,GAClCxB,EAAEkC,SAASnF,GAAKiD,EAAE6B,SAAS9E,EAAIuG,EAC/BtD,EAAEkC,SAASlF,GAAKgD,EAAE6B,SAAS7E,EAAIsG,EAC/BtD,EAAE6B,SAAS9E,GAAKiD,EAAEmC,aAAapF,EAAIuG,EACnCtD,EAAE6B,SAAS7E,GAAKgD,EAAEmC,aAAanF,EAAIsG,EACnCtD,EAAEoC,KAAOkB,EAGjB,GAAIzI,KAAKyH,gBAAkBzH,KAAKwH,kBAAmB,CAC/C,IACIb,EAAI3G,KAAKwH,kBACTb,EAAIG,EAAmB/E,OACvB4E,IACF,CACE,MAAMxB,EAAInF,KAAKoH,mBAAmBT,GAClCxB,EAAEkC,SAASnF,GAAKiD,EAAE6B,SAAS9E,EAAIuG,EAC/BtD,EAAEkC,SAASlF,GAAKgD,EAAE6B,SAAS7E,EAAIsG,EAC/BtD,EAAE6B,SAAS9E,GAAKiD,EAAEmC,aAAapF,EAAIuG,EACnCtD,EAAE6B,SAAS7E,GAAKgD,EAAEmC,aAAanF,EAAIsG,EACnCtD,EAAEoC,KAAOkB,EAEb,IAAK9B,EAAI,EAAGA,EAAI3G,KAAKyH,gBAAiBd,IAAK,CACvC,MAAMxB,EAAInF,KAAKoH,mBAAmBT,GAClCxB,EAAEkC,SAASnF,GAAKiD,EAAE6B,SAAS9E,EAAIuG,EAC/BtD,EAAEkC,SAASlF,GAAKgD,EAAE6B,SAAS7E,EAAIsG,EAC/BtD,EAAE6B,SAAS9E,GAAKiD,EAAEmC,aAAapF,EAAIuG,EACnCtD,EAAE6B,SAAS7E,GAAKgD,EAAEmC,aAAanF,EAAIsG,EACnCtD,EAAEoC,KAAOkB,GAIjB,KACIzI,KAAKoH,mBAAmBpH,KAAKwH,mBAAmBD,KAC5CT,EAAmBC,UACvB/G,KAAKwH,oBAAsBxH,KAAKyH,iBAEhCzH,KAAKwH,oBACDxH,KAAKwH,oBAAsBV,EAAmB/E,SAC9C/B,KAAKwH,kBAAoB,GAGjC,GAAIxH,KAAKwH,kBAAoBxH,KAAKyH,gBAC9B,IAAKd,EAAI3G,KAAKwH,kBAAmBb,EAAI3G,KAAKyH,gBAAiBd,IAAK,CAC5D,MAAMxB,EAAInF,KAAKoH,mBAAmBT,GAE5BoC,EAAQ3D,KAAQA,EAAIA,EAAIA,EAAI,EAC5B8B,EACFJ,EAAmBI,KACnB6B,EAAK5D,EAAEoC,IAAMT,EAAmBC,UACpChD,EAAIiC,YAAc,EAAIb,EAAEoC,IAAMT,EAAmBC,SACjDhD,EAAIiF,UACAhJ,KAAK2H,YACLxC,EAAEkC,SAASnF,EAAIgF,EAAO,EACtB/B,EAAEkC,SAASlF,EAAI+E,EAAO,EACtBA,EACAA,GAIZ,GAAIlH,KAAKyH,gBAAkBzH,KAAKwH,kBAAmB,CAC/C,IACIb,EAAI3G,KAAKwH,kBACTb,EAAIG,EAAmB/E,OACvB4E,IACF,CACE,MAAMxB,EAAInF,KAAKoH,mBAAmBT,GAC5BoC,EAAQ3D,KAAQA,EAAIA,EAAIA,EAAI,EAC5B8B,EACFJ,EAAmBI,KACnB6B,EAAK5D,EAAEoC,IAAMT,EAAmBC,UACpChD,EAAIiC,YAAc,EAAIb,EAAEoC,IAAMT,EAAmBC,SACjDhD,EAAIiF,UACAhJ,KAAK2H,YACLxC,EAAEkC,SAASnF,EAAIgF,EAAO,EACtB/B,EAAEkC,SAASlF,EAAI+E,EAAO,EACtBA,EACAA,GAGR,IAAKP,EAAI,EAAGA,EAAI3G,KAAKyH,gBAAiBd,IAAK,CACvC,MAAMxB,EAAInF,KAAKoH,mBAAmBT,GAC5BoC,EAAQ3D,KAAQA,EAAIA,EAAIA,EAAI,EAC5B8B,EACFJ,EAAmBI,KACnB6B,EAAK5D,EAAEoC,IAAMT,EAAmBC,UACpChD,EAAIiC,YAAc,EAAIb,EAAEoC,IAAMT,EAAmBC,SACjDhD,EAAIiF,UACAhJ,KAAK2H,YACLxC,EAAEkC,SAASnF,EAAIgF,EAAO,EACtB/B,EAAEkC,SAASlF,EAAI+E,EAAO,EACtBA,EACAA,IAkBZ,GAdAnD,EAAIiC,YAAc,EAElBjC,EAAI0B,OACJ1B,EAAIlE,KAAO,QAAQ+B,KAAKC,MACpBjC,EAAS,oCAEbmE,EAAIE,UAAY,SAChBF,EAAIG,aAAe,SACnBH,EAAIb,UAAY,OAChBa,EAAImC,YAAc,UAClBnC,EAAIoC,WAAa,GACjBpC,EAAI3B,SAAS,UAAWzC,EAAQ,EAAGC,EAAS,GAC5CmE,EAAIsC,WAEC/G,EAAOmC,aAAc,CACtBnC,EAAOkC,aAAe,GAEtB,IAAK,IAAI+G,KAAOjJ,EAAOiC,cAAe,CAClC,MAAM4C,EAAM,IAAIkE,OAAOC,MACvBnE,EAAIoE,IAAMA,EACVpE,EAAI8E,OAAS,OAGb3J,EAAOkC,aAAa+C,KAAKJ,GAE7B7E,EAAOmC,aAAenC,EAAOkC,aAAa8E,KAAI,CAACnC,EAAKwC,MAChDxE,GAAIP,KAAKE,SAAWlC,EACpBsJ,MAAOtJ,EAAS,EAAKgC,KAAKE,SAAWlC,EAAU,EAC/CsC,EAAS,IAANyE,EAAkB,KAARhH,EAAwB,KAARA,EAC7BwE,UAIR,IAAK,IAAIwC,EAAI,EAAGA,EAAIrH,EAAOmC,aAAaM,OAAQ4E,IAAK,CACjD,MAAMwC,EAAQ7J,EAAOmC,aAAakF,GAC5BxC,EAAM7E,EAAOkC,aAAamF,GAChC,IAAKxC,EAAIiF,SAAU,SACnB,MAAMC,EAAO1J,EAAQ,EACf2J,EAAOnF,EAAIvE,QAAUyJ,EAAOlF,EAAIxE,OAEhCoF,EAAMC,YAAYD,MAAQ,IAC3BoE,EAAMI,YAAWJ,EAAMI,UAAYxE,GACxC,MAAM0D,EAAY1D,EAAMoE,EAAMI,UAC9BJ,EAAMI,UAAYxE,EAClBoE,EAAMhH,GAAKgH,EAAMD,MAAQT,EACrBU,EAAMhH,EAAIvC,IAAQuJ,EAAMhH,GAAKmH,GACjCvF,EAAI0B,OACJ1B,EAAIiC,YAAc,EAClBjC,EAAIiF,UAAU7E,EAAKgF,EAAMjH,EAAImH,EAAO,EAAGF,EAAMhH,EAAGkH,EAAMC,GACtDvF,EAAIsC,YAQhB,SAASmD,EACLhK,GACAC,MACIA,EAAQ,KAAIC,UACZA,EAAY,GAAE+J,KACdA,GAAO,EAAI5J,KACXA,EAAO,YAAWF,MAClBA,EAAQ,KAAIC,OACZA,EAAS,KAAIkB,OACbA,GAAS,EAAIhB,MACbA,EAAQ,OAAM4J,MACdA,EAAQ,SAAQC,QAChBA,EAAU,SAAQ5J,WAClBA,EAAa,qBACb,IAEJ,MAAMyJ,EAAS,IAAIlK,EAAOE,EAAQ,CAC9BE,UAAWA,EACXD,QACAI,OACAC,QACAC,aACAJ,MAAOA,GAASiK,IAChBhK,OAAQA,GAAUiK,MAGtB,IAAIC,EAiBJ,GAfIhJ,IACAgJ,EAAiB,IAAMN,EAAO1I,OAAO8I,IAAiBC,KAEtDxB,OAAO0B,iBAAiB,SAAUD,GAE9BE,QAAQC,aACRD,OAAOC,YAAYF,iBAAiB,SAAUD,IAItDtK,EAAO0K,UAAUC,IAAI,WAErBX,EAAOnH,QACPqH,EAAMF,GAEFC,EACA,OAAO,IAAIW,SAAkBC,IACzBhC,OAAO0B,iBAAiB,WAAqBO,IACzC,IAAIC,EAAMD,EAAEC,IAAIC,cACJ,MAARD,GAAuB,WAARA,IACff,EAAOrJ,OACPX,EAAO0K,UAAUO,OAAO,WACpBX,IACAzB,OAAOqC,oBAAoB,SAAUZ,GACjCE,QAAQC,aACRD,OAAOC,YAAYS,oBACf,SACAZ,IAIZ9G,YAAW,KACP2G,EAAQH,GACRa,GAAS,GACV,SAKvB,CAOA,SAASjL,EAAYiD,EAAOsI,GAExB,IADA,IAAIlL,EAAQ,GACHkH,EAAItE,EAAOsE,GAAKgE,IAAOhE,EAC5BlH,EAAM8E,KAAKqG,OAAOC,aAAalE,IAEnC,OAAOlH,CACX,CAYA,SAASmK,IACL,OAAOvB,OAAOyC,UAClB,CAGA,SAASjB,IACL,OAAOxB,OAAO0C,WAClB,CAjBAvB,EAAOwB,MAAQ5L,EAEfoK,EAAOyB,aAkCYzB,EACVwB,MAAM,GAAQ,IACdnK,OAAO2I,EAAOwB,MAAM,GAAQ,KAEnBnK,OApBlB,KAAuBqK,IACZA,EAAK5E,KAAK6E,GAAQP,OAAOC,aAAaM,KAmBxBC,CAbjB,KAAQ,KAAQ,IAAQ,IAAQ,IAAQ,IAAQ,GAAQ,GAAQ,GAChE,GAAQ,GAAQ,GAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAChE,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAChE,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAChE,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAChE,MAAQ,MAAQ"}