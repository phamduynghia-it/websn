{"version":3,"file":"matrix.js","sources":["../src/matrix.js"],"sourcesContent":["/**\n * Matrix effect on a Canvas https://jcubic.github.io/cmatrix/\n *\n * Copyright (c) 2021-2023 Jakub T. Jankiewicz <https://jcubic.pl/me>\n * Released under MIT license\n *\n * The code was started at this Codepen https://codepen.io/jcubic/pen/rNeNwgB\n * And was based on code by Michael Goodman https://codepen.io/goodmanmr1/pen/jpPeRR\n *\n */\nvar katagana = gen_unicode(0x30a1, 0x30f6);\nvar hiragana = gen_unicode(0x3041, 0x3096);\n\n// ---------------------------------------------------------------\nclass Matrix {\n    constructor(\n        canvas,\n        {\n            chars = null,\n            font_size = 18,\n            width,\n            height,\n            font = \"monospace\",\n            color,\n            background,\n        } = {}\n    ) {\n        this._canvas = canvas;\n        if (this._canvas._matrix) {\n            this._canvas._matrix.stop();\n            this._canvas._matrix.clear();\n        }\n        this._canvas._matrix = this;\n        this._ctx = canvas.getContext(\"2d\");\n        this._font_size = font_size;\n        this._drops = [];\n        this._color = color;\n        this._background = background;\n        this._font = font;\n        this._chars = chars ? chars : katagana.concat(hiragana);\n        this.resize(width, height);\n        Matrix.messages = [\n            \"3\",\n            \"2\",\n            \"1\",\n            \"Happy birthday\",\n            \"25.06.2003\",\n            \"Nguyễn Bảo Hân\",\n            \"Chúc em sinh nhật vui vẻ\",\n            \"Có tất cả trừ vất vả\"\n        ];\n        Matrix.currentMessageIndex = 0;\n        Matrix.nextMessageIndex = 1;\n        Matrix.ledParticles = [];\n        Matrix.morphing = false;\n        Matrix.morphProgress = 0;\n        Matrix.lastSwitchTime = 0;\n        Matrix.showHeart = false;\n        Matrix.fallingImages = [\n          \" a1.jfif\",\n            \"a2.jfif\"\n        ];\n        Matrix.loadedImages = [];\n        Matrix.fallingState = null;\n    }\n    random_char() {\n        return rnd(this._chars);\n    }\n    render_char(char, x, y) {\n        this._ctx.fillText(char, x, y);\n    }\n    start() {\n        if (this._run) {\n            return;\n        }\n        let frames = 0;\n        this._run = true;\n        const self = this;\n        (function loop() {\n            if (self._run) {\n                if (frames++ % 2 === 0) {\n                    self.render(); // slower render\n                }\n                requestAnimationFrame(loop);\n            }\n        })();\n    }\n    stop() {\n        this._run = false;\n    }\n    reset() {\n        for (let x = 0; x < this._columns; x++) {\n            this._drops[x] = 255;\n        }\n    }\n    resize(width, height) {\n        this._width = width;\n        this._height = height;\n        this.clear();\n        this._canvas.width = width;\n        setTimeout(() => {\n            this._canvas.height = height;\n            this.reset();\n        }, 0);\n        this._columns = Math.round(width / this._font_size);\n    }\n    clear() {\n        this._ctx.fillStyle = this._background;\n        this._ctx.fillRect(0, 0, this._width, this._height);\n        this._ctx.fillStyle = this._color;\n        this._ctx.font = this._font_size + \"px \" + this._font;\n    }\n    fullscreen() {\n        if (!document.fullscreenElement) {\n            document.documentElement.requestFullscreen();\n        } else if (document.exitFullscreen) {\n            document.exitFullscreen();\n        }\n    }\n    getLedPoints(text, font, width, height, density = 8) {\n        const off = document.createElement(\"canvas\");\n        off.width = width;\n        off.height = height;\n        const ctx = off.getContext(\"2d\");\n        ctx.clearRect(0, 0, width, height);\n        ctx.font = font;\n        ctx.textAlign = \"center\";\n        ctx.textBaseline = \"middle\";\n        ctx.fillStyle = \"#fff\";\n        ctx.fillText(text, width / 2, height / 2);\n        const img = ctx.getImageData(0, 0, width, height).data;\n        const points = [];\n        for (let y = 0; y < height; y += density) {\n            for (let x = 0; x < width; x += density) {\n                const idx = (y * width + x) * 4 + 3;\n                if (img[idx] > 128) points.push({ x, y });\n            }\n        }\n        return points;\n    }\n    render() {\n        this.clear();\n        // Đặt màu ký tự rơi là gradient tím-hồng\n        let gradient = this._ctx.createLinearGradient(0, 0, this._width, 0);\n        gradient.addColorStop(0, \"#d291ff\");\n        gradient.addColorStop(1, \"#ff8ae2\");\n        this._ctx.fillStyle = gradient;\n        for (let col = 0; col < this._drops.length; col++) {\n            const char = this.random_char();\n            const x = col * this._font_size;\n            const y = this._drops[col] * this._font_size;\n            this.render_char(char, x, y);\n            if (y > this._height && Math.random() > 0.975) {\n                this._drops[col] = 0;\n            }\n            this._drops[col]++;\n        }\n\n        // Nếu đã hết các câu chữ, chỉ hiển thị hiệu ứng trái tim\n        if (Matrix.showHeart) {\n            this.renderHeart();\n            return;\n        }\n\n        // Hiệu ứng LED grid morphing chữ ở giữa màn hình (bling mờ ảo)\n        const width = this._width;\n        const height = this._height;\n        const fontSize = Math.floor(Math.min(width, height) / 7);\n        const font = `bold ${fontSize}px Arial, Roboto, 'sans-serif'`;\n        const density = Math.max(3, Math.floor(Math.min(width, height) / 70));\n        const now = performance.now();\n        const time = now / 500; // tốc độ bling\n\n        if (!Matrix.morphing) {\n            const points = this.getLedPoints(\n                Matrix.messages[Matrix.currentMessageIndex],\n                font,\n                width,\n                height,\n                density\n            );\n            // Thêm phase ngẫu nhiên cho hiệu ứng bling\n            Matrix.ledParticles = points.map((pt) => ({\n                x: pt.x,\n                y: pt.y,\n                tx: pt.x,\n                ty: pt.y,\n                alpha: 1,\n                phase: Math.random() * Math.PI * 2,\n            }));\n            for (let p of Matrix.ledParticles) {\n                this._ctx.save();\n                this._ctx.beginPath();\n                this._ctx.arc(p.x, p.y, density / 2.5, 0, 2 * Math.PI);\n                this._ctx.fillStyle = \"#fff\";\n                // Hiệu ứng bling: alpha dao động nhẹ\n                const blingAlpha = 0.7 + 0.3 * Math.sin(time + p.phase);\n                this._ctx.globalAlpha = p.alpha * blingAlpha;\n                this._ctx.shadowColor = \"#fff\";\n                this._ctx.shadowBlur = 4; // mờ ảo nhẹ\n                this._ctx.fill();\n                this._ctx.restore();\n            }\n            if (\n                Matrix.currentMessageIndex === Matrix.messages.length - 1 &&\n                now - Matrix.lastSwitchTime > 2000\n            ) {\n                // Đã hết câu cuối cùng, chuyển sang hiệu ứng trái tim\n                Matrix.showHeart = true;\n                return;\n            }\n            if (now - Matrix.lastSwitchTime > 2000) {\n                const fromPoints = points;\n                const toPoints = this.getLedPoints(\n                    Matrix.messages[Matrix.nextMessageIndex],\n                    font,\n                    width,\n                    height,\n                    density\n                );\n                const maxLen = Math.max(fromPoints.length, toPoints.length);\n                Matrix.ledParticles = [];\n                for (let i = 0; i < maxLen; i++) {\n                    const from = fromPoints[i % fromPoints.length];\n                    const to = toPoints[i % toPoints.length];\n                    Matrix.ledParticles.push({\n                        x: from.x,\n                        y: from.y,\n                        tx: to.x,\n                        ty: to.y,\n                        alpha: 1,\n                        phase: Math.random() * Math.PI * 2,\n                    });\n                }\n                Matrix.morphing = true;\n                Matrix.morphProgress = 0;\n            }\n        } else {\n            Matrix.morphProgress += 0.04;\n            let done = true;\n            for (let p of Matrix.ledParticles) {\n                const t = Math.min(1, Matrix.morphProgress);\n                const nx = p.x + (p.tx - p.x) * t;\n                const ny = p.y + (p.ty - p.y) * t;\n                this._ctx.save();\n                this._ctx.beginPath();\n                this._ctx.arc(nx, ny, density / 2.5, 0, 2 * Math.PI);\n                this._ctx.fillStyle = \"#fff\";\n                // Hiệu ứng bling: alpha dao động nhẹ\n                const blingAlpha = 0.7 + 0.3 * Math.sin(time + p.phase);\n                this._ctx.globalAlpha = (p.alpha * (1 - t) + t) * blingAlpha;\n                this._ctx.shadowColor = \"#fff\";\n                this._ctx.shadowBlur = 4;\n                this._ctx.fill();\n                this._ctx.restore();\n                if (t < 1) done = false;\n            }\n            if (done) {\n                if (Matrix.currentMessageIndex === Matrix.messages.length - 1) {\n                    Matrix.showHeart = true;\n                    return;\n                }\n                Matrix.currentMessageIndex = Matrix.nextMessageIndex;\n                Matrix.nextMessageIndex =\n                    (Matrix.nextMessageIndex + 1) % Matrix.messages.length;\n                Matrix.morphing = false;\n                Matrix.lastSwitchTime = now;\n            }\n        }\n    }\n    renderHeart() {\n        const ctx = this._ctx;\n        const width = this._width;\n        const height = this._height;\n        // Cài đặt hiệu ứng\n        const settings = {\n            particles: {\n                length: 2000,\n                duration: 2,\n                velocity: 100,\n                effect: -1.3,\n                size: 13,\n            },\n        };\n        // Pool particle\n        if (!this._heartParticles) {\n            this._heartParticles = [];\n            this._heartParticlePool = [];\n            for (let i = 0; i < settings.particles.length; i++) {\n                this._heartParticlePool.push({\n                    position: { x: 0, y: 0 },\n                    velocity: { x: 0, y: 0 },\n                    acceleration: { x: 0, y: 0 },\n                    age: 0,\n                });\n            }\n            this._heartFirstActive = 0;\n            this._heartFirstFree = 0;\n            this._heartTime = null;\n            this._heartImage = (() => {\n                const canvas = document.createElement(\"canvas\");\n                const cctx = canvas.getContext(\"2d\");\n                canvas.width = settings.particles.size;\n                canvas.height = settings.particles.size;\n                function pointOnHeart(t) {\n                    return {\n                        x: 160 * Math.pow(Math.sin(t), 3),\n                        y:\n                            130 * Math.cos(t) -\n                            50 * Math.cos(2 * t) -\n                            20 * Math.cos(3 * t) -\n                            10 * Math.cos(4 * t) +\n                            25,\n                    };\n                }\n                function to(t) {\n                    const point = pointOnHeart(t);\n                    point.x =\n                        settings.particles.size / 2 +\n                        (point.x * settings.particles.size) / 350;\n                    point.y =\n                        settings.particles.size / 2 -\n                        (point.y * settings.particles.size) / 350;\n                    return point;\n                }\n                cctx.beginPath();\n                let t = -Math.PI;\n                let point = to(t);\n                cctx.moveTo(point.x, point.y);\n                while (t < Math.PI) {\n                    t += 0.01;\n                    point = to(t);\n                    cctx.lineTo(point.x, point.y);\n                }\n                cctx.closePath();\n                cctx.fillStyle = \"#FF5CA4\";\n                cctx.fill();\n                const image = new window.Image();\n                image.src = canvas.toDataURL();\n                return image;\n            })();\n        }\n        // Animation\n        const now = performance.now() / 1000;\n        const deltaTime = now - (this._heartTime || now);\n        this._heartTime = now;\n        // clear canvas (đã clear ở đầu render)\n        // Tạo particle mới\n        const particleRate =\n            settings.particles.length / settings.particles.duration;\n        const amount = particleRate * deltaTime;\n        function pointOnHeart(t) {\n            return {\n                x: 160 * Math.pow(Math.sin(t), 3),\n                y:\n                    130 * Math.cos(t) -\n                    50 * Math.cos(2 * t) -\n                    20 * Math.cos(3 * t) -\n                    10 * Math.cos(4 * t) +\n                    25,\n            };\n        }\n        for (let i = 0; i < amount; i++) {\n            const pos = pointOnHeart(Math.PI - 2 * Math.PI * Math.random());\n            const len = Math.sqrt(pos.x * pos.x + pos.y * pos.y);\n            const dir = {\n                x: (pos.x / len) * settings.particles.velocity,\n                y: (pos.y / len) * settings.particles.velocity,\n            };\n            // Lấy particle từ pool\n            const p = this._heartParticlePool[this._heartFirstFree];\n            p.position.x = width / 2 + pos.x;\n            p.position.y = height / 2 - pos.y;\n            p.velocity.x = dir.x;\n            p.velocity.y = -dir.y;\n            p.acceleration.x = dir.x * settings.particles.effect;\n            p.acceleration.y = -dir.y * settings.particles.effect;\n            p.age = 0;\n            this._heartFirstFree++;\n            if (this._heartFirstFree === settings.particles.length)\n                this._heartFirstFree = 0;\n            if (this._heartFirstActive === this._heartFirstFree) {\n                this._heartFirstActive++;\n                if (this._heartFirstActive === settings.particles.length)\n                    this._heartFirstActive = 0;\n            }\n        }\n        // Update và vẽ particle\n        let i;\n        // Update\n        if (this._heartFirstActive < this._heartFirstFree) {\n            for (i = this._heartFirstActive; i < this._heartFirstFree; i++) {\n                const p = this._heartParticlePool[i];\n                p.position.x += p.velocity.x * deltaTime;\n                p.position.y += p.velocity.y * deltaTime;\n                p.velocity.x += p.acceleration.x * deltaTime;\n                p.velocity.y += p.acceleration.y * deltaTime;\n                p.age += deltaTime;\n            }\n        }\n        if (this._heartFirstFree < this._heartFirstActive) {\n            for (\n                i = this._heartFirstActive;\n                i < settings.particles.length;\n                i++\n            ) {\n                const p = this._heartParticlePool[i];\n                p.position.x += p.velocity.x * deltaTime;\n                p.position.y += p.velocity.y * deltaTime;\n                p.velocity.x += p.acceleration.x * deltaTime;\n                p.velocity.y += p.acceleration.y * deltaTime;\n                p.age += deltaTime;\n            }\n            for (i = 0; i < this._heartFirstFree; i++) {\n                const p = this._heartParticlePool[i];\n                p.position.x += p.velocity.x * deltaTime;\n                p.position.y += p.velocity.y * deltaTime;\n                p.velocity.x += p.acceleration.x * deltaTime;\n                p.velocity.y += p.acceleration.y * deltaTime;\n                p.age += deltaTime;\n            }\n        }\n        // Remove inactive\n        while (\n            this._heartParticlePool[this._heartFirstActive].age >=\n                settings.particles.duration &&\n            this._heartFirstActive !== this._heartFirstFree\n        ) {\n            this._heartFirstActive++;\n            if (this._heartFirstActive === settings.particles.length)\n                this._heartFirstActive = 0;\n        }\n        // Draw\n        if (this._heartFirstActive < this._heartFirstFree) {\n            for (i = this._heartFirstActive; i < this._heartFirstFree; i++) {\n                const p = this._heartParticlePool[i];\n                // ease\n                const ease = (t) => --t * t * t + 1;\n                const size =\n                    settings.particles.size *\n                    ease(p.age / settings.particles.duration);\n                ctx.globalAlpha = 1 - p.age / settings.particles.duration;\n                ctx.drawImage(\n                    this._heartImage,\n                    p.position.x - size / 2,\n                    p.position.y - size / 2,\n                    size,\n                    size\n                );\n            }\n        }\n        if (this._heartFirstFree < this._heartFirstActive) {\n            for (\n                i = this._heartFirstActive;\n                i < settings.particles.length;\n                i++\n            ) {\n                const p = this._heartParticlePool[i];\n                const ease = (t) => --t * t * t + 1;\n                const size =\n                    settings.particles.size *\n                    ease(p.age / settings.particles.duration);\n                ctx.globalAlpha = 1 - p.age / settings.particles.duration;\n                ctx.drawImage(\n                    this._heartImage,\n                    p.position.x - size / 2,\n                    p.position.y - size / 2,\n                    size,\n                    size\n                );\n            }\n            for (i = 0; i < this._heartFirstFree; i++) {\n                const p = this._heartParticlePool[i];\n                const ease = (t) => --t * t * t + 1;\n                const size =\n                    settings.particles.size *\n                    ease(p.age / settings.particles.duration);\n                ctx.globalAlpha = 1 - p.age / settings.particles.duration;\n                ctx.drawImage(\n                    this._heartImage,\n                    p.position.x - size / 2,\n                    p.position.y - size / 2,\n                    size,\n                    size\n                );\n            }\n        }\n        ctx.globalAlpha = 1;\n        // Thêm chữ I LOVE YOU ở giữa trái tim\n        ctx.save();\n        ctx.font = `bold ${Math.floor(\n            height / 12\n        )}px Arial, Roboto, 'sans-serif'`;\n        ctx.textAlign = \"center\";\n        ctx.textBaseline = \"middle\";\n        ctx.fillStyle = \"#fff\";\n        ctx.shadowColor = \"#ff5ca4\";\n        ctx.shadowBlur = 12;\n        ctx.fillText(\"Bảo Hân\", width / 2, height / 2);\n        ctx.restore();\n        // --- ẢNH RƠI LIÊN TỤC 2 BÊN ---\n        if (!Matrix.fallingState) {\n            Matrix.loadedImages = [];\n            let loaded = 0;\n            for (let src of Matrix.fallingImages) {\n                const img = new window.Image();\n                img.src = src;\n                img.onload = () => {\n                    loaded++;\n                };\n                Matrix.loadedImages.push(img);\n            }\n            Matrix.fallingState = Matrix.loadedImages.map((img, i) => ({\n                y: -Math.random() * height,\n                speed: height / 2 + (Math.random() * height) / 2,\n                x: i === 0 ? width * 0.125 : width * 0.875,\n                img,\n            }));\n        }\n        // Vẽ ảnh rơi liên tục\n        for (let i = 0; i < Matrix.fallingState.length; i++) {\n            const state = Matrix.fallingState[i];\n            const img = Matrix.loadedImages[i];\n            if (!img.complete) continue;\n            const imgW = width / 4;\n            const imgH = img.height * (imgW / img.width);\n            // deltaTime cho hiệu ứng mượt\n            const now = performance.now() / 1000;\n            if (!state._lastTime) state._lastTime = now;\n            const deltaTime = now - state._lastTime;\n            state._lastTime = now;\n            state.y += state.speed * deltaTime;\n            if (state.y > height) state.y = -imgH;\n            ctx.save();\n            ctx.globalAlpha = 1;\n            ctx.drawImage(img, state.x - imgW / 2, state.y, imgW, imgH);\n            ctx.restore();\n        }\n    }\n}\n\n// ---------------------------------------------------------------\n// :: Init code\n// ---------------------------------------------------------------\nfunction matrix(\n    canvas,\n    {\n        chars = null,\n        font_size = 14,\n        exit = true,\n        font = \"monospace\",\n        width = null,\n        height = null,\n        resize = true,\n        color = \"#0F0\",\n        mount = () => {},\n        unmount = () => {},\n        background = \"rgba(0, 0,0,0.05)\",\n    } = {}\n) {\n    const matrix = new Matrix(canvas, {\n        font_size: font_size,\n        chars,\n        font,\n        color,\n        background,\n        width: width ?? default_width(),\n        height: height ?? default_height(),\n    });\n\n    let resize_handler;\n\n    if (resize) {\n        resize_handler = () => matrix.resize(default_width(), default_height());\n\n        window.addEventListener(\"resize\", resize_handler);\n\n        if (screen?.orientation) {\n            screen.orientation.addEventListener(\"change\", resize_handler);\n        }\n    }\n\n    canvas.classList.add(\"running\");\n\n    matrix.start();\n    mount(matrix);\n\n    if (exit) {\n        return new Promise(function (resolve) {\n            window.addEventListener(\"keydown\", function (e) {\n                var key = e.key.toLowerCase();\n                if (key === \"q\" || key === \"escape\") {\n                    matrix.stop();\n                    canvas.classList.remove(\"running\");\n                    if (resize_handler) {\n                        window.removeEventListener(\"resize\", resize_handler);\n                        if (screen?.orientation) {\n                            screen.orientation.removeEventListener(\n                                \"change\",\n                                resize_handler\n                            );\n                        }\n                    }\n                    setTimeout(() => {\n                        unmount(matrix);\n                        resolve();\n                    }, 0);\n                }\n            });\n        });\n    }\n}\n\nexport default matrix;\n\n// ---------------------------------------------------------------\n// :: Utils\n// ---------------------------------------------------------------\nfunction gen_unicode(start, end) {\n    var chars = [];\n    for (var i = start; i <= end; ++i) {\n        chars.push(String.fromCharCode(i));\n    }\n    return chars;\n}\n\nmatrix.range = gen_unicode;\n\nmatrix.custom_chars = make_custom_chars();\n\n// ---------------------------------------------------------------\nfunction rnd(array) {\n    return array[Math.floor(Math.random() * array.length)];\n}\n\n// ---------------------------------------------------------------\nfunction default_width() {\n    return window.innerWidth;\n}\n\n// ---------------------------------------------------------------\nfunction default_height() {\n    return window.innerHeight;\n}\n\n// ---------------------------------------------------------------\nfunction make_chars(...nums) {\n    return nums.map((num) => String.fromCharCode(num));\n}\n\n// ---------------------------------------------------------------\nfunction make_custom_chars() {\n    const nums = [\n        0x25aa, 0x254c, 0x00a9, 0x00a6, 0x007c, 0x007a, 0x003e, 0x003c, 0x003a,\n        0x0022, 0x002a, 0x002b, 0x30a2, 0x30a6, 0x30a8, 0x30aa, 0x30ab, 0x30ad,\n        0x30b1, 0x30b3, 0x30b5, 0x30b7, 0x30b9, 0x30bb, 0x30bd, 0x30bf, 0x30c4,\n        0x30c6, 0x30ca, 0x30cb, 0x30cc, 0x30cd, 0x30cf, 0x30d2, 0x30db, 0x30de,\n        0x30df, 0x30e0, 0x30e1, 0x30e2, 0x30e4, 0x30e8, 0x30e9, 0x30ea, 0x30ef,\n        0x30fc, 0xa78a, 0xe937,\n    ];\n\n    // '6' don't have its glyph\n    const digits = matrix\n        .range(0x0030, 0x0035)\n        .concat(matrix.range(0x0037, 0x0039));\n\n    return digits.concat(make_chars(...nums));\n}\n"],"names":["katagana","gen_unicode","hiragana","Matrix","canvas","chars","font_size","width","height","font","color","background","_canvas","this","_matrix","stop","clear","_ctx","getContext","_font_size","_drops","_color","_background","_font","_chars","concat","resize","messages","currentMessageIndex","nextMessageIndex","ledParticles","morphing","morphProgress","lastSwitchTime","showHeart","fallingImages","loadedImages","fallingState","array","Math","floor","random","length","char","x","y","fillText","_run","frames","self","loop","render","requestAnimationFrame","_columns","_width","_height","setTimeout","_this","reset","round","fillStyle","fillRect","document","fullscreenElement","exitFullscreen","documentElement","requestFullscreen","text","density","off","createElement","ctx","clearRect","textAlign","textBaseline","img","getImageData","data","points","idx","push","gradient","createLinearGradient","addColorStop","col","random_char","render_char","renderHeart","fontSize","min","max","now","performance","time","done","p","t","nx","tx","ny","ty","save","beginPath","arc","PI","blingAlpha","sin","phase","globalAlpha","alpha","shadowColor","shadowBlur","fill","restore","getLedPoints","map","pt","fromPoints","toPoints","maxLen","i","from","to","settings","duration","velocity","effect","size","_heartParticles","_heartParticlePool","position","acceleration","age","_heartFirstActive","_heartFirstFree","_heartTime","_heartImage","cctx","point","pow","cos","pointOnHeart","moveTo","lineTo","closePath","image","window","Image","src","toDataURL","deltaTime","amount","pos","len","sqrt","dir","ease","drawImage","onload","speed","state","complete","imgW","imgH","_lastTime","matrix","resize_handler","exit","mount","unmount","default_width","default_height","addEventListener","screen","_screen","orientation","classList","add","start","Promise","resolve","e","key","toLowerCase","remove","removeEventListener","_screen2","end","String","fromCharCode","innerWidth","innerHeight","make_chars","nums","num","range","custom_chars"],"mappings":"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"}